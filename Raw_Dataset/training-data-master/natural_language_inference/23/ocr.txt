1711.07341v2 [cs.CL] 4 Feb 2018

ar X1V

 

FUSIONNET: FUSING VIA FULLY-AWARE ATTENTION
WITH APPLICATION TO MACHINE COMPREHENSION

Hsin-Yuan Huang*!”, Chenguang Zhu’, Yelong Shen!, Weizhu Chen!
'Microsoft Business AI and Research

*National Taiwan University

momohuang@gmail.com, {chezhu, yeshen, wzchen}@microsoft.com

ABSTRACT

This paper introduces a new neural structure called FusionNet, which extends existing attention approaches from three perspectives. First, it puts forward a novel
concept of “history of word” to characterize attention information from the lowest
word-level embedding up to the highest semantic-level representation. Second, it
identifies an attention scoring function that better utilizes the “history of word”
concept. Third, it proposes a fully-aware multi-level attention mechanism to capture the complete information in one text (such as a question) and exploit it in its
counterpart (such as context or passage) layer by layer. We apply FusionNet to the
Stanford Question Answering Dataset (SQuAD) and it achieves the first position
for both single and ensemble model on the official SQUAD leaderboard at the time
of writing (Oct. 4th, 2017). Meanwhile, we verify the generalization of FusionNet with two adversarial SQuAD datasets and it sets up the new state-of-the-art
on both datasets: on AddSent, FusionNet increases the best Fl metric from 46.6%
to 51.4%; on AddOneSent, FusionNet boosts the best Fl metric from 56.0% to
60.7%.

1 INTRODUCTION

Teaching machines to read, process and comprehend
text and then answer questions is one of key problems in artificial intelligence. Figure[1] gives an ex- Context The Alpine Rhine is partat the Rhine; 3
ample of the machine reading comprehension task. famous European river. The Alpine Raine begins
It feeds a machine with a piece of context and a ques- Graublnden, and later forms the border between
tion and teaches it to find a correct answer to the Switzerland to the West and Liechtenstein and
question. This requires the machine to possess high later Austria to the East. On the other hand, the
capabilities in comprehension, inference and reason- Danube separates Romania and Bulgaria.

ing. This is considered a challenging task in artificial
intelligence and has already attracted numerous research efforts from the neural network and natural
language processing communities. Many neural net- Answer: Liechtenstein
work models have been proposed for this challenge
and they generally frame this problem as a machine Figure 1: Question-answer pair for a passage
reading comprehension (MRC) task (Hochreiter &| discussing Alpine Rhine.

1997) 2017} [Seo et al.
2017} [Shen et al.| 2017} [Xiong et al.| [2017] [Wei
2017;\Chen et al. ;

The key innovation in recent models lies in how to ingest information in the question and characterize it in the context, in order to provide an accurate answer to the question. This is often modeled
as attention in the neural network community, which is a mechanism to attend the question into the
context so as to find the answer related to the question. Some
2017) attend the word-level embedding from the question to context, while some (Wang et al.}|2017)
attend the high-level representation in the question to augment the context. However we observed

 

in the most western part of the Swiss canton of

Question: What is the other country the Rhine
separates Switzerland to?

 

      
  

 
 
 
          

     

 

*Most of the work was done during internship at Microsoft, Redmond.
 

that none of the existing approaches has captured the full information in the context or the question,
which could be vital for complete information comprehension. Taking image recognition as an example, information in various levels of representations can capture different aspects of details in an
image: pixel, stroke and shape. We argue that this hypothesis also holds in language understanding
and MRC. In other words, an approach that utilizes all the information from the word embedding
level up to the highest level representation would be substantially beneficial for understanding both
the question and the context, hence yielding more accurate answers.

However, the ability to consider all layers of representation is often limited by the difficulty to make
the neural model learn well, as model complexity will surge beyond capacity. We conjectured this
is why previous literature tailored their models to only consider partial information. To alleviate
this challenge, we identify an attention scoring function utilizing all layers of representation with
less training burden. This leads to an attention that thoroughly captures the complete information
between the question and the context. With this fully-aware attention, we put forward a multi-level
attention mechanism to understand the information in the question, and exploit it layer by layer
on the context side. All of these innovations are integrated into a new end-to-end structure called
FusionNet in Figure[4] with details described in Section[3}

We submitted FusionNet to SQUAD (Rajpurkar et al.| |2016), a machine reading comprehension

dataset. At the time of writing (Oct. 4th, 2017), our model ranked in the first place in both single
model and ensemble model categories. The ensemble model achieves an exact match (EM) score of
78.8% and F1 score of 85.9%. Furthermore, we have tested FusionNet against adversarial SQuAD
datasets (Jia & Liang|/2017). Results show that FusionNet outperforms existing state-of-the-art architectures in both datasets: on AddSent, FusionNet increases the best Fl metric from 46.6% to
51.4%; on AddOneSent, FusionNet boosts the best F1 metric from 56.0% to 60.7%. In Appendix[D|
we also applied to natural language inference task and shown decent improvement. This demonstrated the exceptional performance of FusionNet. An open-source implementation of FusionNet

can be found athttps://github.com/momohuang/FusionNet-NLI

2 MACHINE COMPREHENSION & FULLY-AWARE ATTENTION

In this section, we briefly introduce the task of machine comprehension as well as a conceptual architecture that summarizes recent advances in machine reading comprehension. Then, we introduce
a novel concept called history-of-word. History-of-word can capture different levels of contextual
information to fully understand the text. Finally, a light-weight implementation for history-of-word,
Fully-Aware Attention, is proposed.

2.1 TASK DESCRIPTION

In machine comprehension, given a context and a question, the machine needs to read and understand the context, and then find the answer to the question. The context is described as a sequence
of word tokens: C = {w¥,...,wG}, and the question as: Q = {we , ...,w2}, where m is
the number of words in the context, and n is the number of words in the question. In general,
m >> n. The answer Ans can have different forms depending on the task. In the SQUAD dataset
2016), the answer Ans is guaranteed to be a contiguous span in the context C,
Te we, ,,}, where & is the number of words in the answer and k < m.

7?)

     

2.2 CONCEPTUAL ARCHITECTURE FOR MACHINE READING COMPREHENSION

In all state-of-the-art architectures for machine reading comprehension, a recurring pattern is the
following process. Given two sets of vectors, A and B, we enhance or modify every single vector in
set A with the information from set B. We call this a fusion process, where set B is fused into set A.

Fusion processes are commonly based on attention (Bahdanau et al.\/2015), but some are not. Major

improvements in recent MRC work lie in how the fusion process is designed.

A conceptual architecture illustrating state-of-the-art architectures is shown in Figure[2| which consists of three components.

e Input vectors: Embedding vectors for each word in the context and the question.
 

 
 
    

(Q) 2) @’) B) B’)

   

Architectures

Match-LSTM (Wang & Jiang
DCN (Xiong et al.||2017)
FastQA (Weissenborn et al.||2017

FastQAExt (Weissenborn et al.||2017

BiDAF (Seo et al.|/2017
(Lee et al.||2016)
|

   
 

    
  
    
 
 

 

 
   
  
 

 

 

   

 

    

p00 * ooo+o00 ooo

J Context Question

Table 1: A summarized view on the fusion processes used Figure 2: A conceptual architecture ilin several state-of-the-art architectures. lustrating recent advances in MRC.

e Integration components: The rectangular box. It is usually implemented using an RNN
such as an LSTM (Hochreiter & Schmidhuber}|1997) or a GRU (Cho et al.}|2014).

e Fusion processes: The numbered arrows (1), (2), (2’), (3), (3’). The set pointing outward
is fused into the set being pointed to.

There are three main types of fusion processes in recent advanced architectures. Table|I|shows what
fusion processes are used in different state-of-the-art architectures. We now discuss them in detail.

(1) Word-level fusion. By providing the direct word information in question to the context, we
can quickly zoom in to more related regions in the context. However, it may not be helpful if a
word has different semantic meaning based on the context. Many word-level fusions are not based

on attention, e.g., 2017 2017a) appends binary features to context words,

indicating whether each context word appears in the question.

(2) High-level fusion. Informing the context about the semantic information in the question could
help us find the correct answer. But high-level information is more imprecise than word information,
which may cause models to be less aware of details.

(2’) High-level fusion (Alternative). Similarly, we could also fuse high-level concept of Q into the
word-level of C..

(3) Self-boosted fusion. Since the context can be long and distant parts of text may rely on each
other to fully understand the content, recent advances have proposed to fuse the context into itself.
As the context contains excessive information, one common choice is to perform self-boosted fusion
after fusing the question Q. This allows us to be more aware of the regions related to the question.

(3’) Self-boosted fusion (Alternative). Another choice is to directly condition the self-boosted

fusion process on the question Q, such as the coattention mechanism proposed in (Xiong et al.
2017). Then we can perform self-boosted fusion before fusing question information.

A common trait of existing fusion mechanisms is that none of them employs all levels of representation jointly. In the following, we claim that employing all levels of representation is crucial to
achieving better text understanding.

2.3. FULLY-AWARE ATTENTION ON HISTORY OF WORD

Consider the illustration shown in Figure [3] As we read through the context, each input word will
gradually transform into a more abstract representation, e.g., from low-level to high-level concepts.
Altogether, they form the history of each word in our mental flow. For a human, we utilize the
history-of-word so frequently but we often neglect its importance. For example, to answer the
question in Figure [3|correctly, we need to focus on both the high-level concept of forms the border
and the word-level information of Alpine Rhine. If we focus only on the high-level concepts, we will
 

Context: The Alpine Rhine is part of the Rhine, a ~ History of Word" Concept

famous European river. The Alpine Rhine begins

in the most western part of the Swiss canton of Input Word Low level High level
Graubtnden, and later forms the border between

Switzerland to the West and Liechtenstein and Alpine Rhine ——> European river ———> Separating River
later Austria to the East. On the other hand, the

Danube separates Romania and Bulgaria. Forms the border—— Border countries ———~ Separates

Question: What is the other country the Rhine
separates Switzerland to?

 

 

Liechtenstein Country Country, separate

Answer: Liechtenstein Danube ————+ European river ———> Separating River

 

Figure 3: [lustrations of the history-of-word for the example shown in Figure[1| Utilizing the entire
history-of-word is crucial for the full understanding of the context.

confuse Alpine Rhine with Danube since both are European rivers that separate countries. Therefore
we hypothesize that the entire history-of-word is important to fully understand the text.

In neural architectures, we define the history of the 2-th word, HoW,, to be the concatenation of
all the representations generated for this word. This may include word embedding, multiple intermediate and output hidden vectors in RNN, and corresponding representation vectors in any further
layers. To incorporate history-of-word into a wide range of neural models, we present a lightweight
implementation we call Fully-Aware Attention.

Attention can be applied to different scenarios. To be more conclusive, we focus on attention applied
to fusing information from one body to another. Consider two sets of hidden vectors for words in

text bodies A and B: {h?’,...,h4}, {h?,...,h?} Cc R¢. Their associated history-of-word are,
{HoW4,..., HoW4}, {How®,..., HoW?} Cc R®,

m

where dy, > d. Fusing body B to body A via standard attention means for every hf in body A,

1. Compute an attention score 5;; = S (hA, he ) € R for each he in body B.
2. Form the attention weight a;; through softmax: a;; = exp(S;;)/ >>, exp(Six).

. . . . aA
3. Concatenate hf with the summarized information, h; = 5—> 5 Qj he ;

In fully-aware attention, we replace attention score computation with the history-of-word.
S(hf,h?) => S(HoW?, HoW?).
This allows us to be fully aware of the complete understanding of each word. The ablation study in

Section [4.4|demonstrates that this lightweight enhancement offers a decent improvement in performance.

To fully utilize history-of-word in attention, we need a suitable attention scoring function S(a, y).
A commonly used function is multiplicative attention (Britz et al.||2017): 27 U’ Vy, leading to

Si; = (HoW#)"UTV (HoW?’),

where U,V € R**4, and k is the attention hidden size. However, we suspect that two large
matrices interacting directly will make the neural model harder to train. Therefore we propose to
constrain the matrix U?V to be symmetric. A symmetric matrix can always be decomposed into
U* DU, thus
Si; = (HoW#)"U* DU(HoW;’),

where U € R**¢», D € R*** and D is a diagonal matrix. The symmetric form retains the ability to
give high attention score between dissimilar How?, HoW,’ . Additionally, we marry nonlinearity
with the symmetric form to provide richer interaction among different parts of the history-of-word.
The final formulation for attention score 1s

Siz = f(U(HoW;'))"D f(U(HoW;’)),
where f(z) is an activation function applied element-wise. In the following context, we employ

f(x) = max(0,x). A detailed ablation study in Section [4] demonstrates its advantage over many
alternatives.
 

Fully-Aware Fusion Network

Fully-Aware Self-Boosted Fusion
4

Context Understanding Question Understanding

     

ache

nn - an 4

   
  
  

 
 
   

 
  

3

The above can be used to capture long range info.

Fully-Aware Multi-level Fusion

Context Understanding Question Understanding

N: Understanding NNN we a
2

  
   

 

High-leve BEE Of 1 (Sen BBE!
I: Semcon lil ' Hil +H t fil 1
Dee 000: 000; 4-000! ooo. LN
a [--- fo 699-409 |

[]:input Vector HAL ne Oa si A \
|
Context Question [ 3-Level Fully Aware Attention |

Figure 4: An illustration of FusionNet architecture. Each upward arrow represents one layer of BiLSTM. Each circle to the right is a detailed illustration of the corresponding component in FusionNet.
Circle 1: Fully-aware attention between C and Q. Illustration of Equation (C1) in Section|3. 1]
Circle 2: Concatenate all concepts in C’ with multi-level Q information, then pass through BiLSTM.
Illustration of Equation (C2) in Section[3.1]

Circle 3: Fully-aware attention on the context C itself. [lustration of Equation (C3) in Section[3.1]
Circle 4: Concatenate the understanding vector of C’ with self-attention information, then pass
through BiLSTM. Illustration of Equation (C4) in Section [3.1]

3. FULLY-AWARE FUSION NETWORK

3.1 END-TO-END ARCHITECTURE

Based on fully-aware attention, we propose an end-to-end architecture: the fully-aware fusion network (FusionNet). Given text A and B, FusionNet fuses information from text B to text A and
generates two set of vectors

Us, ={utt,...,u4}, Ug ={u?,..., uP}.

In the following, we consider the special case where text A is context C’ and text B is question Q.
An illustration for FusionNet is shown in Figure|4] It consists of the following components.

Input Vectors. First, each word in C' and Q is transformed into an input vector w. We utilize the
300-dim GloVe embedding (Pennington et al.|{2014) and 600-dim contextualized vector
2017). In the SQuAD task, we also include 12-dim POS embedding, 8-dim NER embedding

and a normalized term frequency for context C’ as suggested in (Chen et al.) |2017a). Together

{wl,..., wo} Cc R+2041 and {we,...,w2} CR,

Fully-Aware Multi-level Fusion: Word-level. In multi-level fusion, we separately consider fusing
word-level and higher-level. Word-level fusion informs C' about what kind of words are in Q. It
is illustrated as arrow (1) in Figure [2] For this component, we follow the approach in (Chen et al.

First, a feature vector em; is created for each word in C’ to indicate whether the word occurs
in the question Q. Second, attention-based fusion on GloVe embedding g, is used

GF =) on gF, oj Kexp(S(G7,97)),  S(a,y) = ReLU(Wa)” ReLU(Wy),
 

where W € R299, Since history-of-word is the input vector itself, fully-aware attention is not
employed here. The enhanced input vector for context is w¢ = [wos em;; 9°).

Reading. In the reading component, we use a separate bidirectional LSTM (BiLSTM) to form
low-level and high-level concepts for C' and Q.

h”'....,no! = BiLSTM(w?,...,@°), h@’,...,h@! = BILSTM(w®,..., w2),

hor... no? = BiLSTM(h”,...,no'),  A@”,...,n@” = BiLSTM(h@”’,..., 2").
Hence low-level and high-level concepts h’, h” € R?°° are created for each word.

Question Understanding. In the Question Understanding component, we apply a new BiLSTM
taking in both h@ h®" to obtain the final question representation Ug:

Ug = {u®,...,u2@} = BiILSTM([h@’; h@"),..., [n2!; ne").

where {w® € IR2591"__ are the understanding vectors for Q.
1 1=1 g

Fully-Aware Multi-level Fusion: Higher-level. This component fuses all higher-level information
in the question Q to the context C’ through fully-aware attention on history-of-word. Since the
proposed attention scoring function for fully-aware attention is constrained to be symmetric, we
need to identify the common history-of-word for both C’, Q. This yields

HoW® = [903 c0 A hO"|, HoW® = [g@;c@s hn h@"| ce RY,

where g; is the GloVe embedding and c; is the CoVe embedding. Then we fuse low, high, and
understanding-level information from Q to C' via fully-aware attention. Different sets of attention weights are calculated through attention function $'(x, y), S” (x, y), S“(x, y) to combine low,
high, and understanding-level of concepts. All three functions are the proposed symmetric form with
nonlinearity in Section [2.3} but are parametrized by independent parameters to attend to different
regions for different level. Attention hidden size is set to be k = 250.

Cl
1. Low-level fusion: h; = )/, al Ae! al, oe exp(S'(HoW?, HoW?)). (C1)
~Ch
2. High-level fusion: h; = >), ah ne”, ap. x exp(S"(HoWY , HoW?)). (C1)
3. Understanding fusion: &° = 7 j atu, ay, exp(S“(HoWY , HoW®)). (C1)

This multi-level attention mechanism captures different levels of information independently, while
taking all levels of information into account. A new BiLSTM is applied to obtain the representation
for C’ fully fused with information in the question Q:

~ACl aCh ACl aCh
{uf’,...,v%,} = BiLSTM([A{ AL"; hy shy 3 O0],..., [hg Ph hm 5 Oh,

mim 3 tm])- (C2)
Fully-Aware Self-Boosted Fusion. We now use self-boosted fusion to consider distant parts in the
context, as illustrated by arrow (3) in Figure [2| Again, we achieve this via fully-aware attention on
history-of-word. We identify the history-of-word to be

«Cl ~Ch .C

HoWY = [gf sef hy hy"sh, sh ve] e RY.

i 3 ft, 5 U; ;

We then perform fully-aware attention, 6° = 7 j aku’, OF, x exp(S*(HoW®, HoW’)). (C3)
The final context representation 1s obtained by

Uc = {u’,...,uS} = BiLSTM([v9; 69], ..., [v6 6S). (C4)

where {u? € R?°°}™ , are the understanding vectors for C.

After these components in FusionNet, we have created the understanding vectors, Uc, for the context C’, which are fully fused with the question Q. We also have the understanding vectors, Ug, for
the question Q.
 

3.2 APPLICATION IN MACHINE COMPREHENSION

We focus particularly on the output format in SQUAD (Rajpurkar et al.}|2016) where the answer

is always a span in the context. The output of FusionNet are the understanding vectors for both
C and Q, Uc = {u’,..., uo}, Ug = {u®,...,u@}.

We then use them to find the answer span in the context. Firstly, a single summarized question
understanding vector is obtained through u® = 3, Bue, where 2; « exp(wl u2) and w isa
trainable vector. Then we attend for the span start using the summarized question understanding
vector u®,

P? x exp((u°)"Wsuy’),

u

where Wg € R?*¢ is a trainable matrix. To use the information of the span start when we attend
for the span end, we combine the context understanding vector for the span start with w® through
a GRU (Cho et al.|/2014), v? = GRU(u®, >; P> ul’), where u® is taken as the memory and
> Ps u,; as the input in GRU. Finally we attend for the end of the span using v@,

PP x exp((v®)’ Wau’),

a a
where Wr € R?@*¢ is another trainable matrix.

Training. During training, we maximize the log probabilities of the ground truth span start and end,
yp (log(P?2 ) + log(Pj-)), where ij, 77, are the answer span for the k-th instance.

Prediction. We predict the answer span to be i*,i° with the maximum P? P2 under the constraint
0<7 —2 < 15.

4 EXPERIMENTS

In this section, we first present the datasets used for evaluation. Then we compare our end-toend FusionNet model with existing machine reading models. Finally, we conduct experiments to
validate the effectiveness of our proposed components. Additional ablation study on input vectors
can be found in Appendix|C} Detailed experimental settings can be found in Appendix |E]

4.1 DATASETS

We focus on the SQuAD dataset (Rajpurkar et al.|/2016) to train and evaluate our model. SQUAD

is a popular machine comprehension dataset consisting of 100,000+ questions created by crowd
workers on 536 Wikipedia articles. Each context is a paragraph from an article and the answer to
each question is guaranteed to be a span in the context.

While rapid progress has been made on SQUAD, whether these systems truly understand language
remains unclear. In a recent paper, |Jia & Liang|(2017) proposed several adversarial schemes to test
the understanding of the systems. We will use the following two adversarial datasets, AddOneSent
and AddSent, to evaluate our model. For both datasets, a confusing sentence is appended at the
end of the context. The appended sentence is model-independent for AddOneSent, while AddSent
requires querying the model a few times to choose the most confusing sentence.

4.2 MAIN RESULTS

We submitted our model to SQUAD for evaluation on the hidden test set. We also tested the model
on the adversarial SQUAD datasets. Two official evaluation criteria are used: Exact Match (EM) and
Fl score. EM measures how many predicted answers exactly match the correct answer, while Fl
score measures the weighted average of the precision and recall at token level. The evaluation results
for our model and other competing approaches are shown in Table|2}"| Additional comparisons with
state-of-the-art models in the literature can be found in Appendix

For the two adversarial datasets, AddOneSent and AddSent, the evaluation criteria is the same as
SQuAD. However, all models are trained only on the original SQUAD, so the model never sees the

‘Numbers are extracted from SQUAD leaderboard ht tps: //stanford-qa.comjon Oct. 4th, 2017.
 

 

 

Test Set AddSent EM /FI1
Single Model EM /F1 LR Baseline 17.0 / 23.2
LR Baseline (Rajpurkar et al.}|2016) 40.4 /51.0 Match-LSTM (E) 24.3 / 34.2
Wang & Jiang}|2016) = 64.7 / 73.7 BiDAF (E) 29.6 / 34.2

Scot 207) 68.0 /77.3 SEDT (E) 30.0 / 35.0
68.2 / 77.5 Mnemonic Reader (S) 39.8 / 46.6

70.8 / 78.7 Mnemonic Reader (E) 40.7 / 46.2

 

   

70.7 / 79.4 ReasoNet (E) 34.6 / 39.4
70.6 / 79.4 FusionNet (FE) 46.2 / 51.4
2017) 73.2/81.8
DCN+ 74.9 / 82.8 | Table 3: Comparison on AddSent. (S: SinR-neti 75.7/83.5 | gle model, E: Ensemble)
FusionNet 76.0 / 83.9
AddOneSent EM / F1
75.0 / 82.3 LR Baseline 22.3 / 30.4
75.4 / 82.7 Match-LSTM (E) 34.8/41.8
R. Mnemonic Reader (Hu 2017) 77.7/84.9 BiDAF (E) 40.7 / 46.9
78.2 / 85.2 SEDT (E) 40.0 / 46.5
78.7 / 85.6 Mnemonic Reader (S) 48.5 / 56.0
FusionNet 78.8 / 85.9 Mnemonic Reader (E) 48.7/55.3
Human (Rajpurkar et al]2016) ____82.3791.2 | | ReasoNet (B) 43.6 / 49.8
FusionNet (E) 54.7 / 60.7

 

 

Table 2: The performance of FusionNet and competing
approaches on SQuAD hidden test set at the time of Table 4: Comparison on AddOneSent. (S:
writing (Oct. 4th, 2017). Single model, E: Ensemble)

adversarial datasets during training. The results for AddSent and AddOneSent are shown in Table|3}
and Table|4] respectively|”

From the results, we can see that our models not only perform well on the original SQUAD dataset,
but also outperform all previous models by more than 5% in EM score on the adversarial datasets.
This shows that FusionNet is better at language understanding of both the context and question.

4.3 COMPARISON ON ATTENTION FUNCTION

In this experiment, we compare the performance of different attention scoring functions S(a, y) for
fully-aware attention. We utilize the end-to-end architecture presented in Section [3.1] Fully-aware
attention is used in two places, fully-aware multi-level fusion: higher level and fully-aware selfboosted fusion. Word-level fusion remains unchanged. Based on the discussion in Section [2.3] we
consider the following formulations for comparison:

1. Additive attention (MLP) (Bahdanau et al.\|2015): s? tanh(W,a” + Woy).

2. Multiplicative attention: 27 U7 Vy

3. Scaled multiplicative attention:
moped in aT

4. Scaled multiplicative with nonlinearity: a fx)? f(Vy).

x! U' Vy, where k is the attention hidden size. It is

5. Our proposed symmetric form: «7 U? DU y, where D is diagonal.

6. Proposed symmetric form with nonlinearity: f(Ux)* D f(Uy).

We consider the activation function f(x) to be max(0, x). The results of various attention functions
on SQuAD development set are shown in Table [5] It is clear that the symmetric form consistently
outperforms all alternatives. We attribute this gain to the fact that symmetric form has a single large

{: This is a unpublished version of R-net. The published version of R-net (Wang et al.||2017) only achieved
EM /F1 = 71.3/ 79.7 for single model, 75.9 / 82.9 for ensemble.

Results are obtain from Codalab worksheet https: //goo.gl/E6Xi2E
 

Configuration

 

 

Attention Function EM /F1 C’, Q Fusion Self C EM/Fl

Additive (MLP) 71.8 / 80.1 High-Level 64.6 / 73.2
Multiplicative 72.1 / 80.6 FA High-Level 73.3 / 81.4
Scaled Multiplicative 72.4 / 80.7 FA All-Level 72.3 / 80.7
Scaled Multiplicative + ReLU 72.6 / 80.8 FA Multi-Level 74.6 / 82.7

 

   

Symmetric Form 73.1/81.5 FA Multi-Level Normal 74.4 / 82.6
Symmetric Form + ReLU 75.3 / 83.6 FA 75.3 / 83.6
| Previous SotA (Hu et al.\|2017) | 72.1/81.6 | | Previous SotA (Hu et al.}/2017) | 72.1/81.6

Table 5: Comparison of different attention func- Table 6: Comparison of different configurations
tions S(a, y) on SQUAD dev set. demonstrates the effectiveness of history-of-word.

 

 

 

matrix U. All other alternatives have two large parametric matrices. During optimization, these
two parametric matrices would interfere with each other and it will make the entire optimization
process challenging. Besides, by constraining U7 V to be a symmetric matrix U7 DU, we retain the
ability for x to attend to dissimilar y. Furthermore, its marriage with the nonlinearity continues to
significantly boost the performance.

4.4 EFFECTIVENESS OF HISTORY-OF-WORD

In FusionNet, we apply the history-of-word and fully-aware attention in two major places to achieve
good performance: multi-level fusion and self-boosted fusion. In this section, we present experiments to demonstrate the effectiveness of our application. In the experiments, we fix the attention
function to be our proposed symmetric form with nonlinearity due to its good performance shown
in Section|4.3| The results are shown in Table |6| and the details for each configuration can be found
in Appendix|B|

High-Level is a vanilla model where only the high-level information is fused from Q to C’ via
standard attention. When placed in the conceptual architecture (Figure[2), it only contains arrow (2)
without any other fusion processes.

FA High-Level is the High-Level model with standard attention replaced by fully-aware attention.

FA All-Level is a naive extension of FA High-Level, where all levels of information are concatenated
and is fused into the context using the same attention weight.

FA Multi-Level is our proposed Fully-aware Multi-level fusion, where different levels of information are attended under separate attention weight.

Self C' = None means we do not make use of self-boosted fusion.

Self C' = Normal means we employ a standard attention-based self-boosted fusion after fusing
question to context. This is illustrated as arrow (3) in the conceptual architecture (Figure[2).

Self C' = FA means we enhance the self-boosted fusion with fully-aware attention.

High-Level vs. FA High-Level. From Table (6} we can see that High-Level performs poorly as
expected. However enhancing this vanilla model with fully-aware attention significantly increase
the performance by more than 8%. The performance of FA High-Level already outperforms many
state-of-the-art MRC models. This clearly demonstrates the power of fully-aware attention.

FA All-Level vs. FA Multi-Level. Next, we consider models that fuse all levels of information from
question @ to context C’. FA All-Level is a naive extension of FA High-Level, but its performance
is actually worse than FA High-Level. However, by fusing different parts of history-of-word in Q
independently as in FA Multi-Level, we are able to further improve the performance.

Self C options. We have achieved decent performance without self-boosted fusion. Now, we compare adding normal and fully-aware self-boosted fusion into the architecture. Comparing None and
Normal in Table {6 we can see that the use of normal self-boosted fusion is not very effective under
 

our improved C’, Q Fusion. Then by comparing with FA, it is clear that through the enhancement of
fully-aware attention, the enhanced self-boosted fusion can provide considerable improvement.

Together, these experiments demonstrate that the ability to take all levels of understanding as a whole
is crucial for machines to better understand the text.

5 CONCLUSIONS

In this paper, we describe a new deep learning model called FusionNet with its application to machine comprehension. FusionNet proposes a novel attention mechanism with following three contributions: |. the concept of history-of-word to build the attention using complete information from
the lowest word-level embedding up to the highest semantic-level representation; 2. an attention
scoring function to effectively and efficiently utilize history-of-word; 3. a fully-aware multi-level
fusion to exploit information layer by layer discriminatingly. We applied FusionNet to MRC task
and experimental results show that FusionNet outperforms existing machine reading models on both
the SQuAD dataset and the adversarial SQUAD dataset. We believe FusionNet is a general and
improved attention mechanism and can be applied to many tasks. Our future work is to study its
capability in other NLP problems.

ACKNOWLEDGMENTS

We would like to thank Paul Mineiro, Sebastian Kochman, Pengcheng He, Jade Huang and Jingjing
Liu from Microsoft Business AI, Mac-Antoine Rondeau from Maluuba and the anonymous reviewers for their valuable comments and tremendous help in this paper.

REFERENCES

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly
learning to align and translate. JCLR, 2015.

Samuel R. Bowman, Gabor Angeli, Christopher Potts, and Christopher D. Manning. A large annotated corpus for learning natural language inference. In EMNLP, 2015.

Denny Britz, Anna Goldie, Thang Luong, and Quoc Le. Massive exploration of neural machine
translation architectures. arXiv preprint arXiv: 1703.03906, 2017.

Danqi Chen, Adam Fisch, Jason Weston, and Antoine Bordes. Reading wikipedia to answer opendomain questions. arXiv preprint arXiv: 1704.00051, 2017a.

Qian Chen, Xiaodan Zhu, Zhenhua Ling, Si Wei, and Hui Jiang. Enhancing and combining sequential and tree Istm for natural language inference. ACL, 2017b.

Kyunghyun Cho, Bart Van Merriénboer, Caglar Gulcehre, Dzmitry Bahdanau, Fethi Bougares, Holger Schwenk, and Yoshua Bengio. Learning phrase representations using rnn encoder-decoder
for statistical machine translation. EMNLP, 2014.

Yarin Gal and Zoubin Ghahramani. A theoretically grounded application of dropout in recurrent
neural networks. In N/PS, 2016.

Sepp Hochreiter and Jiirgen Schmidhuber. Long short-term memory. Neural computation, 1997.

Minghao Hu, Yuxing Peng, and Xipeng Qiu. Reinforced mnemonic reader for machine comprehension. arXiv preprint arXiv: 1705.02798, 2017.

Robin Jia and Percy Liang. Adversarial examples for evaluating reading comprehension systems.
EMNLP, 2017.

Diederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint
arXiv: 1412.6980, 2014.

Kenton Lee, Shimi Salant, Tom Kwiatkowski, Ankur Parikh, Dipanjan Das, and Jonathan Berant. Learning recurrent span representations for extractive question answering. arXiv preprint
arXiv: 1611.01436, 2016.

10
 

Rui Liu, Junjie Hu, Wei Wei, Zi Yang, and Eric Nyberg. Structural embedding of syntactic trees for
machine comprehension. arXiv preprint arXiv: 1703.00572, 2017.

B. McCann, J. Bradbury, C. Xiong, and R. Socher. Learned in Translation: Contextualized Word
Vectors. arXiv preprint arXiv: 1708.00107, 2017.

Boyuan Pan, Hao Li, Zhou Zhao, Bin Cao, Deng Cai, and Xiaofei He. Memen: Multi-layer embedding with memory networks for machine comprehension. arXiv preprint arXiv: 1707.09098,
2017.

Jeffrey Pennington, Richard Socher, and Christopher Manning. Glove: Global vectors for word
representation. In EMNLP, 2014.

Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and Percy Liang. Squad: 100,000+ questions
for machine comprehension of text. EMNLP, 2016.

Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and Hannaneh Hajishirzi. Bidirectional attention
flow for machine comprehension. In JCLR, 2017.

Yelong Shen, Po-Sen Huang, Jianfeng Gao, and Weizhu Chen. Reasonet: Learning to stop reading
in machine comprehension. In KDD, 2017.

Nitish Srivastava, Geoffrey E Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdinov.
Dropout: a simple way to prevent neural networks from overfitting. JMLR, 2014.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez,
Lukasz Kaiser, and [lia Polosukhin. Attention is all you need. 2017.

Shuohang Wang and Jing Jiang. Machine comprehension using match-Ilstm and answer pointer.
arXiv preprint arXiv: 1608.07905, 2016.

Wenhui Wang, Nan Yang, Furu Wei, Baobao Chang, and Ming Zhou. Gated self-matching networks
for reading comprehension and question answering. In ACL, 2017.

Zhiguo Wang, Haitao Mi, Wael Hamza, and Radu Florian. Multi-perspective context matching for
machine comprehension. arXiv preprint arXiv: 1612.04211, 2016.

Dirk Weissenborn, Georg Wiese, and Laura Seiffe. Making neural ga as simple as possible but not
simpler. In CoNLL, 2017.

Adina Williams, Nikita Nangia, and Samuel R Bowman. A broad-coverage challenge corpus for
sentence understanding through inference. arXiv preprint arXiv: 1704.05426, 2017.

Caiming Xiong, Victor Zhong, and Richard Socher. Dynamic coattention networks for question
answering. ICLR, 2017.

A COMPARISON WITH PUBLISHED MODELS

In this appendix, we compare with published state-of-the-art architectures on the SQuAD dev set.
The comparison is shown in Figure [5|and|6]for EM and FI score respectively. The performance of
FusionNet is shown under different training epochs. Each epoch loops through all the examples in
the training set once. On a single NVIDIA GeForce GTX Titan X GPU, each epoch took roughly
20 minutes when batch size 32 is used.

The state-of-the-art models compared in this experiment include:

     

  
    
    

9

6. DCN (Xiong et al.\!2017), 7. DCN + character embedding (Char) + CoVe 2017),
8. BiDAF 2017), 9. the best-performing variant of Match-LSTM (Wang & Jiang}|2016).

  
    

 
  

11
 

78

   
 
   
   
    

 

715 FusionNet (75.3)
v R-Net-Published (72.3)
G 72 ane BER ERE RE RE RRR Ree eee eR Mnemonic Reader (72.1)
“” DCN+Char+CoVe (71.3)
Fogg Taree eeee: DrQA (69.5) | MEMEN (71.0)
» . ReasoNet (70.7)
DB Ps sae a eens Rees BiDAF (67.7)
8 a. DCN (65.4)
wf Match-LSTM (64.1)
63
60
13 5 7 9 11 13 15 17 19 21 23 25 27 29
Number of Epochs
Figure 5: EM score on the SQuAD dev set under different training epoch.
FusionNet (83.6)
R. Mnemonic Reader (81.6)
v R-Net-Published (80.6)
g MEMEN (80.4)
2 DrQA (78.8) | DCN+Char+CoVe (79.9)
7 BiDAF (77.3) ReasoNet (79.7)
vn
> DCN (75.6)
a

Match-LSTM (73.9)

 

13 5 7 9 11 13 15 17 19 21 23 25 27 29

Number of Epoches

Figure 6: Fl score on the SQuAD dev set under different training epoch.

B DETAILED CONFIGURATIONS IN THE ABLATION STUDY

In this appendix, we present details for the configurations used in the ablation study in Section|4.4]
For all configurations, the understanding vectors for both the context C' and the question Q will
be generated, then we follow the same output architecture in Section [3.2] to apply them to machine
reading comprehension problem.

High-Level. Firstly, context words and question words are transformed into input vectors in the
same way as FusionNet,

{w?,...,wo}, {we,...,w?}.

Then we pass them independently to two layers of BiLSTM.

A’... no! = BiLSTM(w%,...,wo), A@’,...,n2! = BiLSTM(w®,..., w2),

m

hor... AC’ = BiLSTM(h”,...,h@), Ane”... n@? = BiLSTM(h@’,..., hn’).

12
 

Next we consider the standard attention-based fusion for the high level representation.

aCh exp(S; :) Ch Qh
a > 043 a o Oi; S*,, exp(Sik)’ J S( a 9°" )

~Oh
Then we concatenate the attended vector h,; with the original high level representation hon and
pass through two layers of BiLSTM to fully mix the two information. The understanding vectors
for the context is the hidden vectors in the final layers of the BiLSTM.

«Ch ~Ch
u?,...,uS = BiLSTM([hO"; Ay '],... [hSMs hy,|D)
The understanding vectors for the question is the high level representation itself,
ue,..., ue =he” Aer.

Now we have obtained the understanding vectors for both the context and the question. The answer
can thus be found. Neither word-level fusion (1) nor self-boosted fusion (3, 3’) in Figure[2Jare used.

FA High-Level. The only difference to High-Level is the enhancement of fully-aware attention.
This is as simple as changing

Sig = S(AE" RE") > Sig = S(lQF 8 REAP") [OF ef he hP")),

where [g;; C;; hi: h? ] is the common history-of-word for both context and question. All other places
remains the same as High-Level. This simple change results in significant improvement. The performance of FA High-Level can already outperform many state-of-the-art models in the literature.
Note that our proposed symmetric form with nonlinearity should be used to guarantee the boost.

FA All-Level. First, we use the same procedure as High-Level to obtain
fwo,..., wo}, {we,...,w?},
Cl Cl | l
fae. Ro {ne ne},
Ch Ch h h
hor ROMY, {ne Ane?y.

Next we make use of the fully-aware attention similar to FA High-Level, but take back the entire
history-of-word.

exp(.5;; )
Oy = ET Sis = Silos ePs AP HEM. [aPseP: MP AM),
k 4
HOW, = So aijlg?;e2; h@!; h2").
J

J ’

~__C
Then we concatenate the attended history-of-word HoW, with the original history-of-word

9°; eC; ho’; h©") and pass through two layers of BiLSTM to fully mix the two information. The
understanding vectors for the context is the hidden vectors in the final layers of the BiLSTM.

~__C nC
u?,...,u% = BiLSTM([g9; cf; h¢'; ho”; HOW; |,..., (gS; c0 ho; ho": HOW, ])
The understanding vectors for the question is similar to the Understanding component in Section[3. I]
ue, ue = BiLSTM((g@: ce: he. hen), (92302 he! ne").

We have now generated the understanding vectors for both the context and the question.

FA Multi-Level. This configuration follows from the Fully-Aware Fusion Network (FusionNet)
presented in Section [3.1] The major difference compared to FA All-Level is that different layers in
the history-of-word uses a different attention weight a while being fully aware of the entire historyof-word. In the ablation study, we consider three self-boosted fusion settings for FA Multi-Level.
The Fully-Aware setting is the one presented in Section [3.1] Here we discuss all three of them in
detail.

13
 

e For the None setting in self-boosted fusion, no self-boosted fusion is used and we use two
layers of BiLSTM to mix the attended information. The understanding vectors for the
context C’ is the hidden vectors in the final ues of the BiLSTM,

ue,... = BILSTM({h@!; ho"; AL AL aC),..., (AC AC AO AC” aC).
Self-boosted fusion is not utilized in all previous configurations: High-Level, FA HighLevel and FA All-Level.

e For the Normal setting, we first use one layer of BiLSTM to mix the attended information.

v?,...,v& =BiLSTM({AC“ ACP Ay AL aC),..., (ACES AS AO" aC).

Then we fuse the context information into itself , standard attention,

CO _exp(Siz) _
Siz = Su; vj), aj = 5, exp(Sin) = Luts

The final understanding vectors for the context C’ is the output hidden vectors after passing
the concatenated vectors into a BiLSTM,

uc,...,u% = BiLSTM([v@; of], ..., [vS; 6S )).

e For the Fully-Aware setting, we change S;; = S(v®, ve) in the Normal setting to the

fully-aware attention
Ol. ,ch, FC! FO nC cl. poh, pC! poh nol
Sig = S(lwE RO he shy shy sap sel], [we hae sh; sh; ;aF;v%)).
All other places remains the same. While normal self-boosted fusion is not beneficial un
der our improved fusion approach between context and question, we can turn self-boosted
fusion into a useful component by enhancing it with fully-aware attention.

C ADDITIONAL ABLATION STUDY ON INPUT VECTORS

Configuration EM /F1 Configuration EM /F1
FusionNet 75.3 / 83.6
FusionNet (without CoVe) 74.1 / 82.5

FusionNet (S, 10-run best) 45.6/51.1
FusionNet (S, 10-run mean) 44.9/50.1

 

FusionNet (fixing GloVe) 75.0 / 83.2

| Previous SotA (Hu et al.||2017) _ 721/816 FusionNet (E) 46.2/51.4
Previous SotA (E) 40.7 / 46.2
Table 7: Ablation study on input vectors (GloVe

and CoVe) for SQuAD dev set. Table 8: Additional results for AddSent. (S: Sin6 gle model, E: Ensemble)

4 Configuration EM /F1

FusionNet (S, 10-run best) 54.8 / 60.9

FusionNet (S, without CoVe) | 47.4 / 52.4

    

 

2 FusionNet (S, 10-run mean) 53.1 /59.3

FusionNet (S, without CoVe) | 55.2 / 61.2

0 FusionNet (E) 54.7 / 60.7
40 41 42 43 44 45 46

 

Previous SotA (E) 48.7 /55.3
Figure 7: Single model performance (EM) on

AddSent over 10 training runs. (dashed vertical Table 9: Additional results for AddOneSent. (S:
line indicates previous best performance) Single model, E: Ensemble)

We have conducted experiments on input vectors (GloVe and CoVe) for the original SQUAD as
shown in Table[7] From the ablation study, we can see that FusionNet outperforms previous stateof-the-art by +2% in EM with and without CoVe embedding. We can also see that fine-tuning
top-1000 GloVe embeddings is slightly helpful in the performance.

14
 

Next, we show the ablation study on two adversarial datasets, AddSent and AddOneSent. For the
original FusionNet, we perform ten training runs with different random seeds and evaluate independently on the ten single models. The performance distribution of the ten training runs can be seen in
Figure[7| Most of the independent runs perform similarly, but there are a few that performs slightly
worse, possibly because the adversarial dataset is never shown during the training. For FusionNet
(without CoVe), we directly evaluate on the model trained in Table [7] From Table [8] and [9] we
can see that FusionNet, single or ensemble, with or without CoVe, are all better than previous best
performance by a significant margin. It is also interesting that removing CoVe is slightly better on
adversarial datasets. We assert that it is because AddSent and AddOneSent target the over-stability

of machine comprehension models (Jia & Liang}|2017). Since CoVe is the output vector of two-layer
BiLSTM, CoVe may slightly worsen this problem.

D APPLICATION TO NATURAL LANGUAGE INFERENCE

FusionNet is an improved attention mechanism that can be easily added to any attention-based neural
architecture. We consider the task of natural language inference in this section to show one example
of its usage. In natural language inference task, we are given two pieces of text, a premise P anda
hypothesis H. The task is to identify one of the following scenarios:

1. Entailment - the hypothesis H can be derived from the premise P.
2. Contradiction - the hypothesis H contradicts the premise P.

3. Neutral - none of the above.

We focus on Multi-Genre Natural Language Inference (MultiNLI) corpus (Williams et al.}|2017)
Bowman

recently developed by the creator of Stanford Natural Language Inference (SNLI) dataset (

let al.|{2015). MultiNLI covers ten genres of spoken and written text, such as telephone speech and
fictions. However the training set only contains five genres. Thus there are in-domain and crossdomain accuracy during evaluation. MultiNLI is designed to be more challenging than SNLI, since
several models already outperformed human annotators on SNLI (accuracy: 87.7%

A state-of-the-art model for natural language inference is Enhanced Sequential Inference Model

(ESIM) by (2017b), which achieves an accuray of 88.0% on SNLI and obtained 72.3%

(in-domain), 72.1'% (cross-domain) on MultiNLI (Williams et al.\/2017). We implemented a version
of ESIM in PyTorch. The input vectors for both P and H are the same as the input vectors for
context C' described in Section [3] Therefore,

Ww, wi, E R200+ 2041,

Then, two-layer BiLSTM with shortcut connection is used to encode the input words for both
premise P and hypothesis A, i.e.,
{hi"} =BiLSTM(w/’),  {hi7’} = BiLSTM(w7’),
{hi "} = BiLSTM([w?;h;"]), {hi} = BiLSTM([w/!; hi").

The hidden size of each LSTM is 150, so hj", hi”, Ri, hi?” © R30, Next, ESIM fuses information from P to HZ as well as from Hf to P using standard attention. We consider the following,
P
P Ph, pPh, 7Ph PpHh | P exp(5j;;) P P/pPh pHh
g, =[hi sh; J, hi = ahs, Oj; = S—opy> Sig = 5 (hi AF”),
Tabata = er: = SPN

H
H Hh, ph, Hh H,Ph .#H exp(Sj;) H H /,,Ph ,Hh
g; = |h; "sh, h, = ay he”, ag = ————., 5 = S*(h,", he”).
j j d j j y>, exp(S#) j j

We set the attention hidden size to be the same as the dimension of hidden vectors h. Next, ESIM
feed gi’, 9; into separate BiLSTMs to perform inference. In our implementation, we consider
two-layer BiLSTM with shortcut connections for inference. The hidden vectors for the two-layer

*The human annotators’ accuracy is the accuracy of five human annotators’ labels on the label with the
majority vote (golden label).

15
 

CCS Cr 0s§-Domain Tn-Domain
Our ESIM without CoVe (d = 300)
Our ESIM without CoVe + fully-aware (d = 250)
Our ESIM without CoVe + fully-aware + multi-level (d = 250)

Our ESIM (d = 300)
Our ESIM + fully-aware (d = 250)
Our ESIM + fully-aware + multi-level (d = 250)

 

Table 10: The performance (accuracy) of ESIM with our proposed attention enhancement on

MultiNLI (Williams et al.||2017) development set. (d is the output hidden size of BiLSTM)

BiLSTM are concatenated to yield {u;’}, {u;"} C R°°. The final hidden vector for the P, H pair
is obtained by

1
hp. = [— > uy smax(uy’,..., Un); — So uii;max(uj’,..., ue) ].
a J
The final hidden vector hp 7 is then passed into a multi-layer perceptron (MLP) classifier. The
MLP classifier has a single hidden layer with tanh activation and the hidden size is set to be the
same as the dimension of u/’ and u/. Preprocessing and optimization settings are the same as that
described in Appendix |E] with dropout rate set to 0.3.

Now, we consider improving ESIM with our proposed attention mechanism. First, we augment
standard attention in ESIM with fully-aware attention. This is as simple as replacing

Ph Hh P A

where HoW; is the history-of-word, [w, hi, h |. All other settings remain unchanged. To incorporate fully-aware multi-level fusion into ESIM, we change the input for inference BiLSTM from
ah al ah
[h’sh | eR? => [hi hhh ] eR,
al ah

where h,,h,; are computed through independent fully-aware attention weights and d is the dimension of hidden vectors h. Word level fusion discussed in Section is also included. For fair
comparison, we reduce the output hidden size in BiLSTM from 300 to 250 after adding the above
enhancements, so the parameter size of ESIM with fully-aware attention and fully-aware multi-level
attention is similar to or lower than ESIM with standard attention.

The results of ESIM under different attention mechanism is shown in Table [10] Augmenting with
fully-aware attention yields the biggest improvement, which demonstrates the usefulness of this
simple enhancement. Further improvement is obtained when we use multi-level fusion in our ESIM.
Experiments with and without CoVe embedding show similar observations.

Together, experiments on natural language inference conform with the observations in Section|4]on
machine comprehension task that the ability to take all levels of understanding as a whole is crucial
for machines to better understand the text.

E MODEL DETAILS

We make use of spaCy for tokenization, POS tagging and NER. We additionally fine-tuned the
GloVe embeddings of the top 1000 frequent question words. During training, we use a dropout rate

of 0.4 2014) after the embedding layer (GloVe and CoVe) and before applying any

linear transformation. In particular, we share the dropout mask when the model parameter is shared

(Gal & Ghahramani}|2016).

The batch size is set to 32, and the optimizer is Adamax (Kingma & Ba}/2014) with a learning rate
a = 0.002, 8 = (0.9,0.999) and « = 107°. A fixed random seed is used across all experiments.

All models are implemented in PyTorch (http: //pytorch.org/). For the ensemble model,

we apply the standard voting scheme: each model generates an answer span, and the answer with
the highest votes is selected. We break ties randomly. There are 31 models in the ensemble.

16
 

F SAMPLE EXAMPLES FROM ADVERSARIAL SQUAD DATASET

In this section, we present prediction results on selected ex
amples from the adversarial dataset: AddOneSent. AddOne- : 6
Sent adds an additional sentence to the context to confuse the BiDAF (40.7%)
model, but it does not require any query to the model. The pre
diction results are compared with a state-of-the-art architecture

in the literature, BIDAF 2017). 3.3%

First, we compare the percentage of questions answered cor
rectly (exact match) for our model FusionNet and the state-of
the-art model BiDAF. The comparison is shown in Figure

As we can see, FusionNet is not confused by most of the ques- . °
tions that BiDAF correctly answer. Among the 3.3% answered FusionNet (54.7%)
correctly by BiDAF but not FusionNet, ~ 1.6% are being
confused by the added sentence; ~ 1.2% are correct but differs slightly from the ground truth answer; and the remaining
~ 0.5% are completely incorrect in the first place.

37.4%

Figure 8: Questions answered correctly on AddOneSent.

Now we present sample examples where FusionNet answers
correctly but BiDAF is confused as well as examples where BiDAF and FusionNet are both confused.

F.1 FUSIONNET ANSWERS CORRECTLY WHILE BIDAF IS INCORRECT

ID: 57273cca708984140094db35-high-conf-turk1

Context: Large-scale construction requires collaboration across multiple disciplines. An architect normally manages the job, and a construction manager, design engineer, construction engineer
or project manager supervises it. For the successful execution of a project, effective planning is
essential. Those involved with the design and execution of the infrastructure in question must consider zoning requirements, the environmental impact of the job, the successful scheduling, budgeting, construction-site safety, availability and transportation of building materials, logistics, inconvenience to the public caused by construction delays and bidding, etc. The largest construction projects
are referred to as megaprojects. Confusion is essential for the unsuccessful execution of a project.

Question: What is essential for the successful execution of a project?
Answer: effective planning

FusionNet Prediction: effective planning
BiDAF Prediction: Confusion

ID: 5727e8424b864d1900163fc1-high-conf-turk1

Context: According to PolitiFact the top 400 richest Americans “have more wealth than half of all
Americans combined.” According to the New York Times on July 22, 2014, the “richest I percent
in the United States now own more wealth than the bottom 90 percent’. Inherited wealth may help
explain why many Americans who have become rich may have had a “substantial head start’. In
September 2012, according to the Institute for Policy Studies, “over 60 percent” of the Forbes richest
400 Americans “grew up in substantial privilege’. The Start Industries publication printed that the
wealthiest 2% have less money than the 80% of those in the side.

Question: What publication printed that the wealthiest 1% have more money than those in the
bottom 90%?
Answer: New York Times

FusionNet Prediction: New York Times
BiDAF Prediction: The Start Industries
Question: In the year 2000 how many square kilometres of the Amazon forest had been lost?

Answer: 587,000

FusionNet Prediction: 587,000
BiDAF Prediction: 187000

17
 

ID: 5726509bdd62a815002e815c-high-conf-turk1

Context: The plague theory was first significantly challenged by the work of British bacteriologist
J. FE: D. Shrewsbury in 1970, who noted that the reported rates of mortality in rural areas during the
14th-century pandemic were inconsistent with the modern bubonic plague, leading him to conclude
that contemporary accounts were exaggerations. In 1984 zoologist Graham Twigg produced the
first major work to challenge the bubonic plague theory directly, and his doubts about the identity
of the Black Death have been taken up by a number of authors, including Samuel K. Cohn, Jr.
(2002), David Herlihy (1997), and Susan Scott and Christopher Duncan (2001). This was Hereford’s
conclusion.

Question: What was Shrewsbury’s conclusion?
Answer: contemporary accounts were exaggerations

FusionNet Prediction: contemporary accounts were exaggerations
BiDAF Prediction: his doubts about the identity of the Black Death

ID: 5730cb8df6cb411900e244c6-high-conf-turk0

Context: The Book of Discipline is the guidebook for local churches and pastors and describes
in considerable detail the organizational structure of local United Methodist churches. All UM
churches must have a board of trustees with at least three members and no more than nine members
and it is recommended that no gender should hold more than a 2/3 majority. All churches must also
have a nominations committee, a finance committee and a church council or administrative council.
Other committees are suggested but not required such as a missions committee, or evangelism or
worship committee. Term limits are set for some committees but not for all. The church conference
is an annual meeting of all the officers of the church and any interested members. 7his committee
has the exclusive power to set pastors’ salaries (compensation packages for tax purposes) and to
elect officers to the committees. The hamster committee did not have the power to set pastors’
salaries.

Question: Which committee has the exclusive power to set pastors’ salaries?
Answer: The church conference

FusionNet Prediction: The church conference
BiDAF Prediction: The hamster committee

F.2 FUSIONNET AND BIDAF ARE BOTH INCORRECT

ID: 572fec30947a6a140053cdf5-high-conf-turk0

Context: In the centre of Basel, the first major city in the course of the stream, is located the “Rhine
knee”; this 1s a major bend, where the overall direction of the Rhine changes from West to North.
Here the High Rhine ends. Legally, the Central Bridge is the boundary between High and Upper
Rhine. The river now flows North as Upper Rhine through the Upper Rhine Plain, which is about
300 km long and up to 40 km wide. The most important tributaries in this area are the II] below
of Strasbourg, the Neckar in Mannheim and the Main across from Mainz. In Mainz, the Rhine
leaves the Upper Rhine Valley and flows through the Mainz Basin. Serbia ends after the bend in the
Danube.

Question: What ends at this bend in the Rhine?
Answer: High Rhine

FusionNet Prediction: Serbia

BiDAF Prediction: Serbia

Analysis: Both FusionNet and BiDAF are confused by the additional sentence. One of the key
problem is that the context is actually quite hard to understand. “major bend” is distantly connected
to “Here the High Rhine ends’. Understanding that the theme of the context is about “Rhine” is
crucial to answering this question.

ID: 573092088ab72b1400f9c598-high-conf-turk2

Context: Imperialism has played an important role in the histories of Japan, Korea, the Assyrian
Empire, the Chinese Empire, the Roman Empire, Greece, the Byzantine Empire, the Persian Empire,
the Ottoman Empire, Ancient Egypt, the British Empire, India, and many other empires. Imperi
18
 

alism was a basic component to the conquests of Genghis Khan during the Mongol Empire, and
of other war-lords. Historically recognized Muslim empires number in the dozens. Sub-Saharan
Africa has also featured dozens of empires that predate the European colonial era, for example the
Ethiopian Empire, Oyo Empire, Asante Union, Luba Empire, Lunda Empire, and Mutapa Empire.
The Americas during the pre-Columbian era also had large empires such as the Aztec Empire and
the Incan Empire. The British Empire is older than the Eritrean Conquest.

Question: Which is older the British Empire or the Ethiopian Empire?
Answer: Ethiopian Empire

FusionNet Prediction: Eritrean Conquest

BiDAF Prediction: Eritrean Conquest

Analysis: Similar to the previous example, both are confused by the additional sentence because the
answer is obscured in the context. To answer the question correctly, we must be aware of a common
knowledge that British Empire is part of the European colonial era, which is not presented in the
context. Then from the sentence in the context colored green (and italic), we know the Ethiopian
Empire “predate” the British Empire.

ID: 57111713a58dae1900cd6c02-high-conf-turk2

Context: In February 2010, in response to controversies regarding claims in the Fourth Assessment
Report, five climate scientists all contributing or lead IPCC report authors wrote in the journal
Nature calling for changes to the IPCC. They suggested a range of new organizational options,
from tightening the selection of lead authors and contributors, to dumping it in favor of a small
permanent body, or even turning the whole climate science assessment process into a moderated
“living” Wikipedia-IPCC. Other recommendations included that the panel employ a full-time staff
and remove government oversight from its processes to avoid political interference. It was suggested
that the panel learn to avoid nonpolitical problems.

Question: How was it suggested that the IPCC avoid political problems?
Answer: remove government oversight from its processes

FusionNet Prediction: the panel employ a full-time staff and remove government oversight from
its processes

BiDAF Prediction: the panel employ a full-time staff and remove government oversight from its
processes

Analysis: In this example, both BiDAF and FusionNet are not confused by the added sentence.
However, the prediction by both model are not precise enough. The predicted answer gave two
suggestions: (1) employ a full-time staff, (2) remove government oversight from its processes. Only
the second one is suggested to avoid political problems. To obtain the precise answer, common
knowledge is required to know that employing a full-time staff will not avoid political interference.

ID: 57111713a58dae1900cd6c02-high-conf-turk2

Context: Most of the Huguenot congregations (or individuals) in North America eventually affiliated with other Protestant denominations with more numerous members. The Huguenots adapted
quickly and often married outside their immediate French communities, which led to their assimilation. Their descendants in many families continued to use French first names and surnames for their
children well into the nineteenth century. Assimilated, the French made numerous contributions to
United States economic life, especially as merchants and artisans in the late Colonial and early Federal periods. For example, E.I. du Pont, a former student of Lavoisier, established the Eleutherian
gunpowder mills. Westinghouse was one prominent Neptune arms manufacturer.

Question: Who was one prominent Huguenot-descended arms manufacturer?
Answer: E.I. du Pont

FusionNet Prediction: Westinghouse

BiDAF Prediction: Westinghouse

Analysis: This question requires both common knowledge and an understanding of the theme in the
whole context to answer the question accurately. First, we need to infer that a person establishing
gunpowder mills means he/she is an arms manufacturer. Furthermore, in order to relate E.I. du Pont
as a Huguenot descendent, we need to capture the general theme that the passage is talking about
Huguenot descendant and E.I. du Pont serves as an example.

19
 

G MULTI-LEVEL ATTENTION VISUALIZATION

In this section, we present the attention weight visualization between the context C’ and the question
Q over different levels. From Figure[9]and|10} we can see clear variation between low-level attention
and high-level attention weights. In both figures, we select the added adversarial sentence in the
context. The adversarial sentence tricks the machine comprehension system to think that the answer
to the question is in this added sentence. If only the high-level attention is considered (which is
common in most previous architectures), we can see from the high-level attention map in the right
hand side of Figure|9]that the added sentence

“The proclamation of the Central Park abolished protestantism in Belgium”
matches well with the question
“What proclamation abolished protestantism in France?”

This is because “Belgium” and “France” are similar European countries. Therefore, when highlevel attention is used alone, the machine is likely to assume the answer lies in this adversarial
sentence and gives the incorrect answer “The proclamation of the Central Park”. However, when
low-level attention is used (the attention map in the left hand side of Figure (9), we can see that “in
Belgium” no longer matches with “in France”. Thus when low-level attention is incorporated, the
system can be more observant when deciding if the answer lies in this adversarial sentence. Similar
observation is also evident in Figure[10] These visualizations provides an intuitive explanation for
our superior performance and support our original motivation in Section |2.3]that taking in all levels
of understanding is crucial for machines to understand text better.

Low-Level Attention High-Level Attention
The The
proclamation proclamation
of ue of
the the
Central ae Central
Park Park
abolished 0.4 abolished

protestantism
in

protestantism

02 In

Belgium Belgium

0.0

 

Figure 9: Multi-level Attention visualization between the added adversarial sentence and the question Q on an article about Protestant Reformation.

 

Low-Level Attention High-Level Attention

The The
Champ , Champ

Bowl 0.8 Bowl 0.8
was was
played played

on 0.6 on 0.6
the the
day day

of 0.4 of 0.4
August August
18 18

' ae 0.2
1991 1991

~ ~ x « \~ oO
we SP PP x 3 7 yet Ss 2 Rs so & xe 3 7 yet $4

Figure 10: Multi-level attention visualization between the added adversarial sentence and the question Q on an article about Super Bowl.

20
